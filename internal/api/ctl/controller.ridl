webrpc = v1

name = forester-controller
version = v0.0.1

struct Image
  - ID: int64
  - Name: string

service ImageService
  - Create(image: Image) => (id: int64, uploadPath: string)
  - GetByID(imageID: int64) => (image: Image)
  - Find(pattern: string) => (image: Image)
  - List(limit: int64, offset: int64) => (images: []Image)
  - Delete(name: string)

struct Appliance
  - ID: int64
  - Name: string
  - Kind: int16
  - URI: string

service ApplianceService
  - Create(name: string, kind: int16, uri: string)
  - Find(name: string) => (appliance: Appliance)
  - List(limit: int64, offset: int64) => (appliances: []Appliance)
  - Enlist(name: string, namePattern: string)
  - Delete(name: string)

struct NewSystem
  - Name: string
  - HwAddrs: []string
  - Facts: map<string,string>
  - ApplianceName?: string
  - UID?: string

struct System
  - ID: int64
  - Name: string
  - HwAddrs: []string
  - Facts: map<string,string>
  - Acquired: bool
  - AcquiredAt: timestamp
  - Comment: string
  - ApplianceID?: int64
  - Appliance?: Appliance
  - UID?: string

struct LogEntry
  - Path: string
  - Size: int64
  - CreatedAt: timestamp
  - ModifiedAt: timestamp

service SystemService
  - Register(system: NewSystem)
  - Find(pattern: string) => (system: System)
  - Rename(pattern: string, newName: string)
  - Acquire(systemPattern: string, imagePattern: string, force: bool, snippets: []string, customSnippet: string, ksOverride: string, comment: string, duration: timestamp)
  - Release(systemPattern: string)
  - List(limit: int64, offset: int64) => (systems: []System)
  - BootNetwork(systemPattern: string)
  - BootLocal(systemPattern: string)
  - Kickstart(systemPattern: string) => (contents: string)
  - Logs(systemPattern: string) => (logs: []LogEntry)

struct Snippet
  - ID: int64
  - Name: string
  - Kind: int16
  - Body: string

service SnippetService
  - Create(name: string, kind: int16, body: string)
  - Find(name: string) => (snippet: Snippet)
  - Edit(name: string, body: string)
  - List(limit: int64, offset: int64) => (snippets: []Snippet)
  - Delete(name: string)
